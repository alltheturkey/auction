openapi: 3.1.0
info:
  version: '1.0'
  title: auction-backend
servers:
  - url: 'http://localhost:3000'
paths:
  /users:
    post:
      summary: ''
      operationId: post-users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      servers:
        - url: 'http://localhost:3000'
  '/users/{userId}':
    get:
      summary: ''
      description: ''
      operationId: get-users-userId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/404NotFound'
      servers:
        - url: 'http://localhost:3000'
    put:
      summary: ''
      operationId: put-users-userId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type:
                    - string
                    - 'null'
                roomId:
                  type:
                    - string
                    - 'null'
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
  /rooms:
    get:
      summary: ''
      operationId: get-rooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
      servers:
        - url: 'http://localhost:3000'
    post:
      summary: ''
      operationId: post-rooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
      servers:
        - url: 'http://localhost:3000'
  '/room/{roomId}':
    get:
      summary: ''
      operationId: get-room-roomId
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          $ref: '#/components/responses/404NotFound'
      servers:
        - url: 'http://localhost:3000'
    put:
      summary: ''
      operationId: put-room-roomId
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                turn_user_id:
                  type:
                    - string
                    - 'null'
                auction_id:
                  type:
                    - string
                    - 'null'
                trade_id:
                  type:
                    - string
                    - 'null'
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
    delete:
      summary: ''
      description: ゲーム終了(同じルームを使って再プレイする場合は要検討)
      operationId: delete-room-roomId
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
    options:
      summary: WebSocket
      operationId: options-room-roomId
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomWithRelation'
      servers:
        - url: 'http://localhost:3000'
  /auctions:
    post:
      summary: ''
      operationId: post-auctions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
  '/auctions/{auctionId}':
    put:
      summary: ''
      operationId: put-auctions-auctionId
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                betUserId:
                  type: string
                moneyCardIds:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
    delete:
      summary: ''
      description: オークション確定(ターンユーザが叩く)
      operationId: delete-auctions-auctionId
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
  /trades:
    post:
      summary: ''
      operationId: post-trades
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  format: uuid
                isDouble:
                  type: boolean
                isConfirmed:
                  type: boolean
                  default: false
                animalCardId:
                  type: integer
                targetUserId:
                  type: string
                  format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
  '/trade/{tradeId}':
    put:
      summary: ''
      operationId: put-trade-tradeId
      parameters:
        - name: tradeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                moneyCardIds:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
    delete:
      summary: ''
      description: トレード確定(1プレイヤー目の場合はis_confirmedをtrueにするのみでエントリは削除しない)
      operationId: delete-trade-tradeId
      parameters:
        - name: tradeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200OKOnly'
      servers:
        - url: 'http://localhost:3000'
components:
  responses:
    200OKOnly:
      description: OK
    404NotFound:
      description: Not Found
  schemas:
    User:
      type: object
      title: User
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Room:
      type: object
      title: Room
      properties:
        id:
          type: string
          format: uuid
    RoomWithRelation:
      type: object
      title: RoomWithRelation
      properties:
        id:
          type: string
          format: uuid
        turnUser:
          $ref: '#/components/schemas/User'
          description: nullable ターンのユーザ
        auction:
          $ref: '#/components/schemas/AuctionWithRelation'
          description: nullable
        trade:
          $ref: '#/components/schemas/tradeBetWithRelation'
          description: nullable
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserWithRelation'
    AuctionWithRelation:
      type: object
      title: Auction
      properties:
        id:
          type: string
          format: uuid
        animalCard:
          $ref: '#/components/schemas/Card'
          description: 場の動物カード
        betUser:
          $ref: '#/components/schemas/User'
          description: 落札者
        auctionBets:
          type: array
          items:
            $ref: '#/components/schemas/AuctionBetWithRelation'
    Card:
      type: object
      title: Card
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - animal
            - money
        name:
          type: string
        img:
          type: string
        point:
          type: integer
    AuctionBetWithRelation:
      type: object
      title: AuctionBet
      properties:
        id:
          type: integer
        moneyCards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    tradeBetWithRelation:
      type: object
      title: tradeBet
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        moneyCard:
          $ref: '#/components/schemas/Card'
    UserWithRelation:
      type: object
      title: UserWithRelation
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
