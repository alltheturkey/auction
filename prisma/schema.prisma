generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(cuid())
  name             String
  room             Room       @relation("RoomUsers", fields: [roomId], references: [id])
  roomId           String
  turnUserRooms    Room[]     @relation("turnUserRooms")
  betUserAuctions  Auction[]  @relation("betUserAuctions")
  targetUserTrades Trade[]    @relation("targetUserTrades")
  userTradeBets    TradeBet[] @relation("userTradeBets")
  UserCard         UserCard[]
}

model Room {
  id         String   @id @default(cuid())
  turnUser   User?    @relation("turnUserRooms", fields: [turnUserId], references: [id])
  turnUserId String?
  auction    Auction? @relation(fields: [auctionId], references: [id])
  auctionId  String   @unique
  trade      Trade?   @relation(fields: [tradeId], references: [id])
  tradeId    String   @unique
  userOrder  Json
  roomUsers  User[]   @relation("RoomUsers")
}

model Auction {
  id           String       @id @default(cuid())
  betUser      User         @relation("betUserAuctions", fields: [betUserId], references: [id])
  betUserId    String
  animalCard   Card         @relation(fields: [animalCardId], references: [id])
  animalCardId Int
  room         Room?
  AuctionBet   AuctionBet[]
}

model AuctionBet {
  id          Int     @id @default(autoincrement())
  auction     Auction @relation(fields: [auctionId], references: [id])
  auctionId   String
  moneyCard   Card    @relation(fields: [moneyCardId], references: [id])
  moneyCardId Int
}

model Trade {
  id           String     @id @default(cuid())
  isDouble     Boolean
  isConfirmed  Boolean    @default(false)
  animalCard   Card       @relation(fields: [animalCardId], references: [id])
  animalCardId Int
  targetUser   User       @relation("targetUserTrades", fields: [targetUserId], references: [id])
  targetUserId String
  Room         Room?
  TradeBet     TradeBet[]
}

model TradeBet {
  id          Int    @id @default(autoincrement())
  trade       Trade  @relation(fields: [tradeId], references: [id])
  tradeId     String
  user        User   @relation("userTradeBets", fields: [userId], references: [id])
  userId      String
  moneyCard   Card   @relation(fields: [moneyCardId], references: [id])
  moneyCardId Int
}

model Card {
  id          Int          @id @default(autoincrement())
  type        CardType
  name        String       @unique
  img         String
  point       Int
  auctions    Auction[]
  auctionBets AuctionBet[]
  Trade       Trade[]
  TradeBet    TradeBet[]
  UserCard    UserCard[]
}

enum CardType {
  ANIMAL
  MONEY
}

model UserCard {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  card   Card   @relation(fields: [cardId], references: [id])
  cardId Int

  @@id([userId, cardId])
}
