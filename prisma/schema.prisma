generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "../document/ER-diagram"
}

model User {
  id              String     @id @default(cuid())
  name            String
  room            Room       @relation(fields: [roomId], references: [id])
  roomId          String
  turnUserRoom    Room?      @relation("turnUserRoom")
  topUserAuction  Auction?
  targetUserTrade Trade?
  userTradeBets   TradeBet[]
  userCards       UserCard[]
}

model Room {
  id         String   @id @default(cuid())
  turnUser   User?    @relation("turnUserRoom", fields: [turnUserId], references: [id])
  turnUserId String?  @unique
  auction    Auction? @relation(fields: [auctionId], references: [id])
  auctionId  String?  @unique
  trade      Trade?   @relation(fields: [tradeId], references: [id])
  tradeId    String?  @unique
  updatedAt  DateTime @updatedAt
  userOrder  String[]
  users      User[]
}

model Auction {
  id           String  @id @default(cuid())
  topUser      User?   @relation(fields: [topUserId], references: [id])
  topUserId    String? @unique
  animalCard   Card    @relation(fields: [animalCardId], references: [id])
  animalCardId Int
  amount       Int     @default(0)
  isConfirmed  Boolean @default(false)
  room         Room?
}

model Trade {
  id                          String     @id @default(cuid())
  isConfirmed                 Boolean    @default(false)
  targetUser                  User       @relation(fields: [targetUserId], references: [id])
  targetUserId                String     @unique
  targetUserAnimalUserCardIds Int[]
  turnUserAnimalUserCardIds   Int[]
  room                        Room?
  tradeBet                    TradeBet[]
}

model TradeBet {
  id          Int    @id @default(autoincrement())
  trade       Trade  @relation(fields: [tradeId], references: [id])
  tradeId     String
  user        User   @relation(fields: [userId], references: [id])
  userId      String
  moneyCard   Card   @relation(fields: [moneyCardId], references: [id])
  moneyCardId Int
}

model Card {
  id        Int        @id @default(autoincrement())
  type      CardType
  name      String
  img       String
  point     Int
  auctions  Auction[]
  tradeBets TradeBet[]
  userCards UserCard[]
}

enum CardType {
  ANIMAL
  MONEY
}

model UserCard {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  card   Card   @relation(fields: [cardId], references: [id])
  cardId Int
}
